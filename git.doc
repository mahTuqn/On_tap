Working directory (Thư mục làm việc): Khu vực chứa dự án mà chúng ta đang làm việc.
Staging area (Khu vực sắp xếp): khu vực chứa thông tin thay đổi của các file.
Repository (Git directory - thư mục git): Kho lưu trữ để lưu trữ dữ liệu, lịch sử các phiên bản.

Khi thêm, sửa, xóa file thì vẫn đang ở Working directory (Chạy lệnh git status, những file màu đỏ là đang nằm trong Working directory).
Sau đó chạy lệnh git add ten_file thì thông tin của các file sẽ được lưu vào Staging area, Staging area có tác dụng sắp xếp lại nhưng file đã add vào (Giả sử có 1 file được thay đổi, ta add vào lần 1, sau đó ta lại sửa file đó và add vào lần 2, thì Staging area chỉ lấy lần 2. Chạy lệnh git status, những file màu xanh lá là đang nằm trong Staging area).
Sau đó chạy lệnh git commit -m "Nội dung commit…". Lúc này, những file đã được đánh dấu ở vùng Staging area sẽ được lưu vào Repository.


git --version: Xem phiên bản hiện tại đang được cài trên máy tính.
git --help: Xem danh sách các câu lệnh Git.
git config: Để đặt username và email của bạn trong file config của git.
Để xem thông tin cấu hình username: git config --global user.name
Để xem thông tin cấu hình email: git config --global user.email
Để đặt username mới: git config --global user.name "Đặng Phương Nam"
Để đặt email mới: git config --global user.email "namdp.1999@gmail.com"

git init
    Khởi tạo 1 git repository (kho lưu trữ) trong một dự án mới hoặc dự án đã có (Dùng trong thư mục gốc của dự án).
    Khi khởi tạo xong, trong thư mục gốc (dự án đang làm) sẽ sinh ra một thư mục tên là .git, thư mục này sẽ lưu toàn bộ thông tin lịch sử của dự án mà bạn làm. Chúng ta không cần quan tâm bên trong thư mục này chứa gì.
git status
    Để xem trạng thái của những file đã được thay đổi (bao gồm: thêm, sửa, xóa) trong dự án.
    Ví dụ: tạo file README.md trong dự án (file này để giới thiệu và hướng dẫn cách cài đặt dự án). Sau đó gõ lệnh git status, ta sẽ thấy có file README.md được thêm mới.
git add ten_file
    Thông tin của các file sẽ được lưu vào Staging area.
    Staging area có tác dụng sắp xếp lại nhưng file đã add vào.
    Ví dụ: tạo ra các file rồi thử lại câu lệnh này.
git add .
    hêm thay đổi cho tất cả các file.
    Ví dụ: tạo ra các file rồi thử lại câu lệnh này.
git commit -m "Nội dung…"
    Để đưa những file ở vùng Staging area chuyển sang Repository, mục đích là tạo ra 1 phiên bản mới vào lưu vào lịch sử của Repository.
    Với điều kiện các tập tin, thư mục được thay đổi đã phải nằm trong Staging Area.

git log: Giúp bạn xem lại thông tin lịch sự commit, nhằm giám sát sự thay đổi của dự án. Commit mới sẽ hiện bên trên, commit cũ sẽ hiện bên dưới (Nếu gặp chữ END thì nhấn phím q để thoát).
git show commit_id: Dùng để xem chi tiết một commit
git diff: Xem sự thay đổi của một file sau khi chúng ta chỉnh sửa (File đó vẫn đang ở khu vực Working directory).
gitk: Mở dashboard xem trực quan hơn.
git checkout -- ten_file: Bỏ đi những thay đổi của file, để file đó trở về như lúc ban đầu. Áp dụng cho file đang ở vùng Working directory.
git reset HEAD ten_file hoặc git reset ten_file: Chuyển file đó từ vùng Staging area trở lại vùng Working directory.
git reset --soft commit_id
Dùng để chuyển từ trạng thái đã commit về trạng thái trước lúc chạy lệnh git commit.
Tức là từ Repository về lại Staging area. Trong đó commit_id là mã của nhánh mà ta muốn quay lại.
git reset --mixed commit_id
Dùng để chuyển từ trạng thái đã commit về trạng thái trước lúc chạy lệnh git add.
Tức là từ Repository về lại Working directory. Trong đó commit_id là mã của nhánh mà ta muốn quay lại.
